import { assign } from "xstate";
import {
  awarenessUpdateHandler,
  // broadcastStateHandler,
  clearUncommitedUpdatesHandler,
  initAwarenessHandler,
  registerUpdateHandler,
  roomMemberUpdateHandler,
  // broadcastUpdateHandler,
  stateResetHandler,
  updateConnectionStateHandler,
  websocketInitializer,
  yjsUpdateHandler,
  addUpdateToQueueHandler,
  updateConnectionReadyStateHandler,
  setNewDocFlagHandler,
  removeLastProcessedUpdate,
  commitUncommittedIdsHandler,
  setConnectionActiveStateHandler,
  setMachineReadyStateHandler,
  addRemoteContentToQueueHandler,
  applyContentsFromRemote,
  clearErrorCountHandler,
  updateErrorCountHandler,
  setCommitMessageErrorHandler,
  setUpdateErrorMessageHandler,
  setConnectionErrorMessageHandler,
  setIpfsQueryErrorMessageHandler,
  setInitialCommitErrorMessageHandler,
  setInitialUpdateErrorMessageHandler,
  disconnectedStateHandler,
  handleDisconnectionDueToError,
} from ".";

export const syncMachineActions: Record<any, any> = {
  resetState: assign(stateResetHandler),
  initializeAwareness: assign(initAwarenessHandler),
  updateAwarenessState: assign(awarenessUpdateHandler),
  updateConnectionState: assign(updateConnectionStateHandler),
  initializeSync: assign(websocketInitializer),
  applyRemoteYjsUpdate: assign(yjsUpdateHandler),
  updateRoomMembers: assign(roomMemberUpdateHandler),
  registerUpdate: assign(registerUpdateHandler),
  clearUncommitedUpdates: assign(clearUncommitedUpdatesHandler),
  addUpdateToQueue: assign(addUpdateToQueueHandler),
  removeLastProcessedUpdate: assign(removeLastProcessedUpdate),
  updateConnectionReadyState: assign(updateConnectionReadyStateHandler),
  setNewDocFlag: assign(setNewDocFlagHandler),
  commitUncommittedIds: assign(commitUncommittedIdsHandler),
  setConnectionActiveState: assign(setConnectionActiveStateHandler),
  setMachineReadyState: assign(setMachineReadyStateHandler),
  addRemoteContentToQueue: assign(addRemoteContentToQueueHandler),
  applyContentsFromRemote: assign(applyContentsFromRemote),
  clearErrorCount: assign(clearErrorCountHandler),
  updateErrorCount: assign(updateErrorCountHandler),
  setCommitMessageError: assign(setCommitMessageErrorHandler),
  setUpdateErrorMessage: assign(setUpdateErrorMessageHandler),
  setConnectionErrorMessage: assign(setConnectionErrorMessageHandler),
  setIpfsQueryErrorMessage: assign(setIpfsQueryErrorMessageHandler),
  setInitialCommitErrorMessage: assign(setInitialCommitErrorMessageHandler),
  setInitialUpdateErrorMessage: assign(setInitialUpdateErrorMessageHandler),
  handleDisconnectedState: assign(disconnectedStateHandler),
  handleDisconnectionDueToError: assign(handleDisconnectionDueToError),
};
